%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: D:\newfreqestm_paper\abssincplot.eps
%%CreationDate: 06/08/2008  20:05:18
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   -40   236   652   555
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   -40   236   652   555
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0480 6660 csm

    0     0  8315  3825 rc
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 8316 3826 rf
6 w
0 3074 6875 0 0 -3074 1170 3204 4 MP
PP
-6875 0 0 3074 6875 0 0 -3074 1170 3204 5 MP stroke
4 w
DO
0 sg
1170 3204 mt 1170  130 L
1170  130 mt 1170  130 L
1795 3204 mt 1795  130 L
1795  130 mt 1795  130 L
2420 3204 mt 2420  130 L
2420  130 mt 2420  130 L
3045 3204 mt 3045  130 L
3045  130 mt 3045  130 L
3670 3204 mt 3670  130 L
3670  130 mt 3670  130 L
4295 3204 mt 4295  130 L
4295  130 mt 4295  130 L
4920 3204 mt 4920  130 L
4920  130 mt 4920  130 L
5545 3204 mt 5545  130 L
5545  130 mt 5545  130 L
6170 3204 mt 6170  130 L
6170  130 mt 6170  130 L
6795 3204 mt 6795  130 L
6795  130 mt 6795  130 L
7420 3204 mt 7420  130 L
7420  130 mt 7420  130 L
8045 3204 mt 8045  130 L
8045  130 mt 8045  130 L
1170 3204 mt 8045 3204 L
8045 3204 mt 8045 3204 L
1170 2589 mt 8045 2589 L
8045 2589 mt 8045 2589 L
1170 1974 mt 8045 1974 L
8045 1974 mt 8045 1974 L
1170 1359 mt 8045 1359 L
8045 1359 mt 8045 1359 L
1170  744 mt 8045  744 L
8045  744 mt 8045  744 L
1170  130 mt 8045  130 L
8045  130 mt 8045  130 L
SO
6 w
1170  130 mt 8045  130 L
1170 3204 mt 8045 3204 L
8045 3204 mt 8045  130 L
1170 3204 mt 1170  130 L
1170 3204 mt 8045 3204 L
1170 3204 mt 1170  130 L
1170 3204 mt 1170 3135 L
1170  130 mt 1170  198 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 240 FMSR

 897 3461 mt 
(-10) s
1795 3204 mt 1795 3135 L
1795  130 mt 1795  198 L
1729 3461 mt 
(0) s
2420 3204 mt 2420 3135 L
2420  130 mt 2420  198 L
2287 3461 mt 
(10) s
3045 3204 mt 3045 3135 L
3045  130 mt 3045  198 L
2912 3461 mt 
(20) s
3670 3204 mt 3670 3135 L
3670  130 mt 3670  198 L
3537 3461 mt 
(30) s
4295 3204 mt 4295 3135 L
4295  130 mt 4295  198 L
4162 3461 mt 
(40) s
4920 3204 mt 4920 3135 L
4920  130 mt 4920  198 L
4787 3461 mt 
(50) s
5545 3204 mt 5545 3135 L
5545  130 mt 5545  198 L
5412 3461 mt 
(60) s
6170 3204 mt 6170 3135 L
6170  130 mt 6170  198 L
6037 3461 mt 
(70) s
6795 3204 mt 6795 3135 L
6795  130 mt 6795  198 L
6662 3461 mt 
(80) s
7420 3204 mt 7420 3135 L
7420  130 mt 7420  198 L
7287 3461 mt 
(90) s
8045 3204 mt 8045 3135 L
8045  130 mt 8045  198 L
7845 3461 mt 
(100) s
1170 3204 mt 1238 3204 L
8045 3204 mt 7976 3204 L
1002 3293 mt 
(0) s
1170 2589 mt 1238 2589 L
8045 2589 mt 7976 2589 L
 802 2678 mt 
(0.2) s
1170 1974 mt 1238 1974 L
8045 1974 mt 7976 1974 L
 802 2063 mt 
(0.4) s
1170 1359 mt 1238 1359 L
8045 1359 mt 7976 1359 L
 802 1448 mt 
(0.6) s
1170  744 mt 1238  744 L
8045  744 mt 7976  744 L
 802  833 mt 
(0.8) s
1170  130 mt 1238  130 L
8045  130 mt 7976  130 L
1002  219 mt 
(1) s
1170  130 mt 8045  130 L
1170 3204 mt 8045 3204 L
8045 3204 mt 8045  130 L
1170 3204 mt 1170  130 L
gs 1170 130 6876 3075 rc
DD
24 w
1 -1 63 32 62 31 63 32 62 32 63 33 62 32 63 32 
62 33 63 32 62 31 63 31 62 30 63 29 62 29 63 27 
62 26 63 25 62 23 63 22 62 20 63 18 62 17 63 14 
62 12 63 10 62 7 63 5 62 3 63 0 62 -3 63 -5 
62 -9 63 -11 62 -14 63 -17 62 -19 63 -23 62 -26 63 -29 
62 -32 63 -35 62 -38 63 -41 62 -44 63 -47 62 -49 63 -53 
62 -55 63 -57 62 -61 63 63 62 65 63 68 62 69 63 71 
62 74 63 75 62 77 63 78 62 79 63 81 62 82 63 82 
62 84 63 83 62 84 63 85 62 84 63 84 62 83 63 84 
62 82 63 81 62 80 63 79 62 78 63 76 62 74 63 72 
62 70 63 68 62 65 63 62 62 60 63 57 62 54 63 51 
62 47 63 45 62 40 63 37 62 34 63 29 62 26 63 22 
62 18 63 14 62 10 63 6 62 2 63 -2 62 -6 63 -10 
62 -14 63 -18 62 -22 63 -26 62 -29 63 -34 62 -37 1170 328 112 MP stroke
gr

24 w
DD
3782 3692 mt 
(Frequency \(Hz\)) s
 693 2115 mt  -90 rotate
(|Fm/Vm|) s
90 rotate
SO
6 w
1 sg
-2413 0 0 -879 2413 0 4389 2244 4 MP
PP
0 sg
4413 1612 mt 
(Same absolute value  ) s
4413 1889 mt 
(for both +ve and -ve ) s
4413 2166 mt 
(deviations           ) s
24 w
-304 417 4778 2448 2 MP stroke
61 -8 12 61 34 -124 -107 71 4535 2857 5 MP
PP
272 357 4931 2448 2 MP stroke
11 -61 61 7 -109 -69 37 123 5214 2744 5 MP
PP
6 w
42 -20 5187 1858 2 MP stroke
24 w
6910 6 1124 2889 2 MP stroke
-8 -292 4625 3213 2 MP stroke
6 w
41 -19 4374 1872 2 MP stroke
24 w
0 -298 5241 3219 2 MP stroke
6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

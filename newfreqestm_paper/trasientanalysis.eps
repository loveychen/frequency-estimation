%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: F:\installedmatlab7\work\sumit\latex\trasientanalysis.eps
%%CreationDate: 12/24/2006  01:18:49
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   -78   145   689   645
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   -78   145   689   645
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0936 7740 csm

    0     0  9215  5994 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 9216 5995 rf
6 w
0 4885 7142 0 0 -4885 1198 5334 4 MP
PP
-7142 0 0 4885 7142 0 0 -4885 1198 5334 5 MP stroke
4 w
DO
SO
6 w
0 sg
1198  449 mt 8340  449 L
1198 5334 mt 8340 5334 L
8340 5334 mt 8340  449 L
1198 5334 mt 1198  449 L
1198 5334 mt 8340 5334 L
1198 5334 mt 1198  449 L
2089 5334 mt 2089 5263 L
2089  449 mt 2089  521 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

2006 5480 mt 
(0.9) s
3273 5334 mt 3273 5263 L
3273  449 mt 3273  521 L
3157 5480 mt 
(0.95) s
4456 5334 mt 4456 5263 L
4456  449 mt 4456  521 L
4423 5480 mt 
(1) s
5639 5334 mt 5639 5263 L
5639  449 mt 5639  521 L
5523 5480 mt 
(1.05) s
6823 5334 mt 6823 5263 L
6823  449 mt 6823  521 L
6740 5480 mt 
(1.1) s
8006 5334 mt 8006 5263 L
8006  449 mt 8006  521 L
7890 5480 mt 
(1.15) s
1198 4801 mt 1269 4801 L
8340 4801 mt 8268 4801 L
 930 4845 mt 
(47.2) s
1198 4052 mt 1269 4052 L
8340 4052 mt 8268 4052 L
 930 4096 mt 
(47.4) s
1198 3303 mt 1269 3303 L
8340 3303 mt 8268 3303 L
 930 3347 mt 
(47.6) s
1198 2553 mt 1269 2553 L
8340 2553 mt 8268 2553 L
 930 2597 mt 
(47.8) s
1198 1804 mt 1269 1804 L
8340 1804 mt 8268 1804 L
1030 1848 mt 
(48) s
1198 1055 mt 1269 1055 L
8340 1055 mt 8268 1055 L
 930 1099 mt 
(48.2) s
1198  449 mt 8340  449 L
1198 5334 mt 8340 5334 L
8340 5334 mt 8340  449 L
1198 5334 mt 1198  449 L
gs 1198 449 7143 4886 rc
/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
9 0 10 0 10 1 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 -1 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 10 1 10 0 9 0 10 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 -1 
10 0 10 0 10 0 10 0 9 0 10 0 10 0 10 0 
10 0 10 0 10 0 9 0 10 1 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 -1 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 1 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 -1 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 1 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 0 
10 0 10 0 10 -1 10 0 9 0 10 0 10 0 10 0 
10 0 10 0 10 0 9 0 10 0 10 0 10 0 10 1 
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 -1 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 1 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 -1 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 1 10 0 10 0 10 0 9 0 10 0 10 0 
10 0 10 0 10 0 10 0 9 0 10 -1 10 0 10 0 
10 0 10 0 10 0 9 0 10 0 10 0 10 0 10 0 
10 0 10 0 10 1 9 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 -1 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 1 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 -1 10 0 
10 -2 10 -2 10 -3 10 -4 9 -6 10 -8 10 -11 10 -14 
10 -19 10 -24 10 -29 10 -35 9 -39 10 -44 10 -48 10 -52 
10 -55 10 -58 10 -60 9 -62 10 -64 10 -65 10 -65 10 -65 
10 -66 10 -67 9 -66 10 -66 10 -64 10 -61 10 -59 10 -56 
10 -53 9 -49 10 -45 10 -43 10 -40 10 -37 10 -36 10 -36 
10 -36 9 -38 10 -42 5393 3570 300 MP stroke
10 -46 10 -50 10 -54 10 -58 10 -64 9 -68 10 -72 10 -78 
10 -81 10 -85 10 -88 10 -91 9 -91 10 -90 10 -84 10 -76 
10 -66 10 -57 10 -46 9 -36 10 -24 10 -13 10 -2 10 11 
10 23 10 34 9 46 10 57 10 68 10 79 10 93 10 109 
10 122 10 134 9 143 10 150 10 154 10 156 10 156 10 153 
10 148 9 142 10 134 10 127 10 118 10 111 10 108 10 108 
9 109 10 109 10 108 10 108 10 107 10 106 10 106 9 105 
10 105 10 103 10 102 10 101 10 98 10 94 10 86 9 75 
10 64 10 51 10 39 10 27 10 14 10 1 9 -10 10 -22 
10 -33 10 -42 10 -52 10 -59 10 -66 9 -71 10 -77 10 -83 
10 -88 10 -88 10 -88 10 -85 9 -80 10 -73 10 -65 10 -57 
10 -47 10 -39 10 -28 9 -20 10 -11 10 -4 10 0 10 0 
10 0 10 0 10 0 9 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 0 
10 0 10 0 10 0 10 0 9 0 10 0 10 0 10 0 
10 0 10 0 10 0 10 0 9 0 10 0 10 0 10 0 
10 0 10 0 10 0 9 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 0 
10 0 10 0 10 0 10 0 9 0 10 0 10 0 10 0 
10 0 10 0 10 0 9 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 2444 1776 300 MP stroke
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 0 
10 0 10 0 10 0 10 0 9 0 10 0 10 0 10 0 
10 0 10 0 10 0 10 0 9 0 10 0 10 0 10 0 
10 0 10 0 10 0 9 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 4 0 1198 1776 128 MP stroke
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
9 0 10 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 0 
10 0 10 0 10 0 10 0 9 0 10 0 10 0 10 0 
10 0 10 0 10 0 9 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 0 
10 0 10 0 10 0 10 0 9 0 10 0 10 0 10 0 
10 0 10 0 10 0 9 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 0 
10 0 10 0 10 0 10 0 9 0 10 0 10 0 10 0 
10 0 10 0 10 0 9 0 10 0 10 0 10 0 10 0 
10 0 10 0 10 0 9 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 -79 9 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 -80 
10 0 10 0 10 0 10 0 9 0 10 0 10 0 10 80 
10 0 10 0 10 0 10 79 9 0 10 0 10 0 10 0 
10 0 10 0 10 0 9 0 10 -79 10 0 10 0 10 0 
10 -80 10 0 9 0 10 0 10 0 10 -82 10 0 10 0 
10 0 9 0 10 0 10 82 10 0 10 0 10 80 10 0 
10 0 9 0 10 0 5393 1843 300 MP stroke
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 0 
10 0 10 0 10 0 10 0 9 0 10 0 10 0 10 0 
10 0 10 0 10 0 9 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 79 10 0 
10 0 9 0 10 0 10 0 10 76 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 -76 10 0 10 0 9 0 
10 0 10 0 10 0 10 -79 10 79 10 0 9 0 10 0 
10 0 10 0 10 76 10 0 10 0 9 0 10 76 10 0 
10 0 10 0 10 0 10 0 9 0 10 0 10 0 10 -76 
10 0 10 0 10 0 9 -76 10 0 10 0 10 0 10 0 
10 0 10 0 10 0 9 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 0 
10 0 10 0 10 0 10 0 9 0 10 0 10 0 10 0 
10 0 10 0 10 0 10 0 9 0 10 0 10 0 10 0 
10 0 10 0 10 0 9 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 0 
10 0 10 0 10 0 10 0 9 0 10 0 10 0 10 0 
10 0 10 0 10 0 9 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 2444 1764 300 MP stroke
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 0 
10 0 10 0 10 0 10 0 9 0 10 0 10 0 10 0 
10 0 10 0 10 0 10 0 9 0 10 0 10 0 10 0 
10 0 10 0 10 0 9 0 10 0 10 0 10 0 10 0 
10 0 10 0 9 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
10 0 9 0 10 0 10 0 10 0 10 0 10 0 10 0 
9 0 10 0 10 0 10 0 10 0 10 0 10 0 9 0 
10 0 10 0 10 0 10 0 10 0 10 0 9 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 10 0 10 0 
10 0 10 0 10 0 10 0 10 0 9 0 4 0 1198 1764 128 MP stroke
gr

c9
0 sg
4378 5623 mt 
(time \(seconds\)) s
 848 3266 mt  -90 rotate
(frequency\(Hz\)) s
90 rotate
8 642 5183 1152 2 MP stroke
44 -43 46 42 -47 -120 -43 121 5235 1751 5 MP
PP
4575 1125 mt 
(phadke thorp response) s
498 7 4382 2691 2 MP stroke
-41 -45 43 -45 -121 44 119 46 4839 2653 5 MP
PP
3036 2733 mt 
(response of our algorithm) s

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
